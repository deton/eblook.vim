*eblook.txt*   lookup EPWING dictionary using `eblook' command.

			  eblook.vim説明書

EPWING辞書検索プラグイン			*eblook*

1. 概要					|eblook-overview|
2. 準備					|eblook-setup|
3. チュートリアル			|eblook-tutorial|
4. 操作法				|eblook-usage|
5. オプション				|eblook-option|
6. コマンド				|eblook-command|

{Vi does not have any of these features}

==============================================================================
1. 概要						*eblook-overview*

eblook.vimは、`eblook'プログラムを使って、
EPWING/電子ブック辞書の検索を行うプラグインです。

このプラグインを使うには、`eblook'プログラム
http://ikazuhiro.s206.xrea.com/staticpages/index.php/eblook
とEPWING/電子ブック辞書が必要です。

==============================================================================
2. 準備						*eblook-setup*

|eblook-setup-dict|	準備: 検索対象辞書の指定
|eblook-setup-gaiji|	準備: 外字置換設定

準備: 検索対象辞書の指定			*eblook-setup-dict*
------------------------
eblook.vimの使用前に、検索を行う辞書をvimrcで設定しておく必要があります。
詳細は|eblook-option|を参照してください。

設定する値を調べる方法は以下のようになります。
(a) eblookプログラムを起動します:
	% eblook
	eblook> 

(b) catalogsファイルのあるディレクトリを指定してbookコマンドを実行します:
	eblook> book /usr/local/epwing/iwanami/koujien
   パス中にスペースが含まれる場合は、パスを""でくくってください:
	eblook> book "C:/Program Files/epwing/iwanami/koujien"

(c) listコマンドを実行します:
	eblook> list
	 1. kojien      広辞苑第五版
	 2. furoku      付属資料

(d) vimrcの設定
  (b)でbookコマンドの引数に指定したディレクトリをeblook_dict1_bookに設定します:
	let eblook_dict1_book='/usr/local/epwing/iwanami/koujien'
  (c)のlistコマンド実行時に表示されたsubbookをeblook_dict1_nameに設定します:
	let eblook_dict1_name='kojien'
  (c)のlistコマンド実行時に表示された辞書タイトルを
   eblook_dict1_titleに設定します:
	let eblook_dict1_title='広辞苑第五版'

(e) (b)-(d)を、使いたい辞書について繰り返して、
    eblook_dict1_, eblook_dict2_, ... に値を設定します。

例:
	let eblook_dict1_book='/usr/local/epwing/iwanami/koujien'
	let eblook_dict1_name='kojien'
	let eblook_dict1_title='広辞苑第五版'
	let eblook_dict2_book='/usr/local/epwing/kenkyush/chujisnd'
	let eblook_dict2_name='chujiten'
	let eblook_dict2_title='研究社　新英和・和英中辞典'
	let eblook_dict3_book='/usr/local/epwing/kenkyush/plus'
	let eblook_dict3_name='plus'
	let eblook_dict3_title='研究社リーダーズ＋プラスＶ２'

準備: 外字置換設定			*eblook-setup-gaiji*
------------------
発音記号などの外字をUnicode文字列へ置換するには、以下の設定をしてください。
EBWin用の外字定義ファイルを使用します。
http://hishida.s271.xrea.com/manual/EBPocket/0_0_4_4.html

(1)EBWinのアプリケーションディレクトリもしくは以下から外字定義ファイルを入手。
http://www31.ocn.ne.jp/~h_ishida/EBPocket.html#download_gaiji

(2)bookで指定したディレクトリに、<nameの大文字>.mapファイルをコピー。
例:/usr/local/epwing/iwanami/koujien/に、KOJIEN.mapをコピー。
なお、GENIUS_DAIEIWA.map、GENIUS4.map、KANJIGEN_EPW.mapはコピー後、
ファイル名をGENIUS.map、GENIUS.map、KANJIGEN.mapに変更する必要があります。

(3)可能であれば、Vimの|'encoding'|をutf-8にする。
なお、Vimの&encodingがutf-8以外の場合は、Unicodeへの置換ではなく、
mapファイルで指定される置換文字列への置換を行います。

Windows環境でVimをUTF-8化するには以下を参照してください。
http://sites.google.com/site/fudist/Home/vim-nihongo-ban

euc-jp環境で丸数字等が文字化けする場合は、
mapファイルをnkfでeuc-jpに変換したものを使ってみてください。

==============================================================================
3. チュートリアル				*eblook-tutorial*

|eblook-tutor-search|	検索
|eblook-tutor-entry|	見出し一覧
|eblook-tutor-content|	内容表示
|eblook-tutor-quit|	終了

検索						*eblook-tutor-search*
----
<Leader><C-Y>を押すと、検索語の入力プロンプト(eblook: )が
コマンド行に表示されます。
(<Leader>は|mapleader|で設定されたキーです。
 eblook.vimではデフォルトでCTRL-Kです。つまり、<Leader><C-Y>はCTRL-K CTRL-Y)
検索語を入力すると検索が行われます。
検索結果はentryウィンドウとcontentウィンドウに表示されます。

      テスト【test】
      <gaiji=zb536>試験。検査。特に、学力試験。「心理―」「読解力を―する」
      <gaiji=zb537>一般に、考えたことや試作品などを実際に試してみること。
      「―‐ドライバー」
      <reference><gaiji=zb655>―‐ケース【test case】</reference=2f52:27e>
      <reference><gaiji=zb655>―‐パイロット【test pilot】</reference=2f52:3a0>
      <reference><gaiji=zb655>―‐パターン【test pattern】</reference=2f52:400>
      <reference><gaiji=zb655>―‐ピース【test-piece】</reference=2f52:4a4>
      ~
      ==/tmp/v584032/_eblook_content_1=========================================
      広辞苑第五版     1. 2f52:b6     テスト【test】
      研究社　新英和・和英中辞典       1. f936:5ec    テスト
      研究社リーダーズ＋プラスＶ２     1. 37bca:262   　テスト <proof>
      研究社リーダーズ＋プラスＶ２     2. 37da5:2da   　テスト <quiz>
      ==/tmp/v584032/_eblook_entry_1===========================================

見出し一覧					*eblook-tutor-entry*
----------
検索で見つかった見出しの一覧がentryウィンドウに表示されます。
最初の見出しの内容がcontentウィンドウに表示されます。

entryウィンドウでj,kキーでカーソルを移動して、<CR>を押すと
その行の見出しの内容をcontentウィンドウに表示します。
<Space>,<BS>でcontentウィンドウのPageDown,PageUpができます。

内容表示					*eblook-tutor-content*
--------
内容中に<reference>がある場合は、contentウィンドウの<reference>のある行で
<CR>を押すと、<reference>の先の内容が表示されます。

元の内容に戻るには、<C-P>を押して検索履歴を戻ります。

終了						*eblook-tutor-quit*
----
検索結果を表示しているentryウィンドウとcontentウィンドウの両方を閉じるには、
"q"を押します。

==============================================================================
4. 操作法					*eblook-usage*

検索を行うには、次のキーを入力するか、|:EblookSearch|コマンドを実行します。

<Leader><C-Y>       検索単語を入力して検索を行う
<Leader>y           カーソル位置にある単語を検索する
                    Visual modeの場合は、選択した文字列を検索する

検索結果は、_eblook_entry_{n}と_eblook_content_{n}というウィンドウに
表示されます。{n}は数字で、具体的には1, 2, ..., |eblook_history_max|です。
entryウィンドウには見出し一覧が表示されます。
contentウィンドウには見出しに対応する内容が表示されます。

<C-P>,<C-N>で検索履歴をたどることができます。
reference先を表示した後で元の検索結果に戻りたい場合などに使ってください。
検索履歴は過去のentryバッファを表示します。


entryウィンドウでの操作				*eblook-usage-entry*
-----------------------

<CR>                カーソル行のentryに対応するcontentを表示する
J                   カーソルを下の行に移動してcontentを表示する
K                   カーソルを上の行に移動してcontentを表示する
<Space>             contentウィンドウでPageDownを行う
<BS>                contentウィンドウでPageUpを行う
q                   entryウィンドウとcontentウィンドウを閉じる
s                   新しい単語を入力して検索する(<Leader><C-Y>と同じ)
p                   contentウィンドウに移動する
R                   reference一覧を表示する
<C-P>               検索履歴中の一つ前のバッファを表示する
<C-N>               検索履歴中の一つ次のバッファを表示する

contentウィンドウでの操作			*eblook-usage-content*
-------------------------

<CR>                カーソル位置のreferenceを表示する
<Space>             PageDownを行う
<BS>                PageUpを行う
<Tab>               次のreferenceにカーソルを移動する
q                   entryウィンドウとcontentウィンドウを閉じる
s                   新しい単語を入力して検索する(<Leader><C-Y>と同じ)
p                   entryウィンドウに移動する
R                   reference一覧を表示する
<C-P>               検索履歴中の一つ前のバッファを表示する
<C-N>               検索履歴中の一つ次のバッファを表示する

==============================================================================
5. オプション					*eblook-option*

EPWING/電子ブック辞書は、各辞書ごとに次の4つのオプション
(book, name, title, skip)で設定します。bookとnameは必須です。
{n}の部分は辞書番号で、具体的には1, 2, 3, ...を入れて設定します。
指定した辞書番号の順に検索を行います。辞書番号は連続している必要があります。

|'eblook_dict{n}_book'|		辞書ディレクトリ。(eblookのbookコマンドの引数)
|'eblook_dict{n}_name'|		辞書名。(eblookのselectコマンドの引数)
|'eblook_dict{n}_title'|	辞書識別子
|'eblook_dict{n}_skip'|		この辞書を検索対象にするかどうか

'eblook_dict{n}_book'				*'eblook_dict{n}_book'*
  辞書のあるディレクトリ(catalogsファイルのあるディレクトリ)を指定します。
  eblookプログラムの`book'コマンドに渡すパラメータです。
  Appendixがある場合は、辞書ディレクトリに続けてAppendixディレクトリを
  指定します。
  パスの途中にスペースが含まれる場合は、パス全体を""でくくってください。
  例:
    let eblook_dict1_book = '"C:/Program Files/epwing/iwanami/koujien"'

'eblook_dict{n}_name'				*'eblook_dict{n}_name'*
  辞書名を指定します。eblookプログラムの`select'コマンドに渡すパラメータです。
  eblookプログラムのlistコマンドで調べてください。
  例:
    let eblook_dict1_name = 'kojien'

'eblook_dict{n}_title'				*'eblook_dict{n}_title'*
  辞書の識別子を指定します。デフォルトでは、
  辞書番号とeblook_dict{n}_nameを組み合わせたものが設定されます。
  entryウィンドウ内で辞書を識別するために使われます。
  辞書を識別するのに使うだけなので、
  eblookプログラムのlistコマンドで表示される文字列など、
  他の辞書とぶつからない文字列を適当に指定します。
  例:
    let eblook_dict1_title = '広辞苑第五版'

'eblook_dict{n}_skip'				*'eblook_dict{n}_skip'*
  0でない値を設定すると、この辞書は検索しません。
  skipする設定にしている辞書は、:EblookNotSkipDictコマンドを使って
  検索対象にすることができます。
  例:
    let eblook_dict1_skip = 1


'eblook_entrybuf_height'			*'eblook_entrybuf_height'*
  entryウィンドウの行数。省略値: 4

'eblook_history_max'				*'eblook_history_max'*
  保持しておく過去の検索履歴バッファ数の上限。省略値: 10

'eblookprg'					*'eblookprg'*
  スクリプトから呼び出すeblookプログラムの名前。省略値: eblook

'eblookenc'					*'eblookenc'*
  eblookプログラムの出力を読み込むときのエンコーディング。
  設定可能な値は|'encoding'|参照。省略値: &encoding

'mapleader'
  キーマッピングのプレフィックス。|mapleader|を参照。省略値: CTRL-K
  CTRL-Kを指定する場合の例:
    let mapleader = "\<C-K>"

'plugin_eblook_disable'				*'plugin_eblook_disable'*
  このプラグインを読み込みたくない場合に次のように設定します。
    let plugin_eblook_disable = 1


設定例
------
辞書の設定例です。

	let eblook_dict1_book='/usr/local/epwing/iwanami/koujien'
	let eblook_dict1_name='kojien'
	let eblook_dict1_title='広辞苑第五版'
	let eblook_dict2_book='/usr/local/epwing/kenkyush/chujisnd'
	let eblook_dict2_name='chujiten'
	let eblook_dict2_title='研究社　新英和・和英中辞典'
	let eblook_dict3_book='/usr/local/epwing/kenkyush/plus /usr/local/epwing/appendix/plus-2.0'
	let eblook_dict3_name='plus'
	let eblook_dict3_title='研究社リーダーズ＋プラスＶ２'
	let eblook_dict3_skip=0
	let eblook_dict4_book='/usr/local/epwing/gakken/kanjigen'
	let eblook_dict4_name='kanjigen'
	let eblook_dict4_title='漢字源'
	let eblook_dict4_skip=1
	let eblook_dict5_book='/usr/local/epwing/jiyukok/gendai99'
	let eblook_dict5_name='gn99ep01'
	let eblook_dict5_title='現代用語の基礎知識１９９９年版'
	let eblook_dict5_skip=1
	let eblook_dict6_book='/usr/local/epwing/jiyukok/gendai99'
	let eblook_dict6_name='gn99ep02'
	let eblook_dict6_title='最新日本語活用事典'
	let eblook_dict6_skip=1

==============================================================================
6. コマンド					*eblook-command*

:EblookSearch      				*:EblookSearch* 
  辞書の検索を行います。検索する文字列を引数に指定します。

:EblookListDict					*:EblookListDict*
  辞書の一覧を表示します。
  'eblook_dict{n}_name'等に設定されている内容を表示します。

:EblookSkipDict					*:EblookSkipDict*
  引数で指定した辞書番号の辞書を一時的に検索対象から外します。
  'eblook_dict{n}_skip'を1に設定するのと同じです。
  複数の辞書番号を引数に指定する場合は、間にスペースを入れてください。

:EblookNotSkipDict				*:EblookNotSkipDict*
  引数で指定した辞書番号の辞書を一時的に検索対象に入れます。
  'eblook_dict{n}_skip'を0に設定するのと同じです。
  複数の辞書番号を引数に指定する場合は、間にスペースを入れてください。

==============================================================================
 vim:set ft=help:
